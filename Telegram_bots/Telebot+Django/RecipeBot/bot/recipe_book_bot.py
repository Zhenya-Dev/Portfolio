# –û—Å–Ω–æ–≤–Ω–∏–π —Ñ–∞–π–ª –±–æ—Ç–∞

from telebot import types, TeleBot
from telebot.types import InputMediaPhoto

from recipe_book_markup import *
from recipe_book_text import *

import sqlite3 as sq

from config import TOKEN

bot = TeleBot(TOKEN)


# –•–µ–Ω–¥–ª–µ—Ä —è–∫–∏–π —Ä–µ–∞–≥—É—î –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
def start_message_message(message: types.Message):
    global name_counter, flag

    # –ß–∞—Å—Ç–∏–Ω–∞ FSM —è–∫–∞ –¥–æ–¥–∞—î True —É flag
    with sq.connect('../dj_bot/bot_site/db.sqlite3') as bd:

        # –†–æ–±–ª—é –ª—ñ—á–∏–ª—å–Ω–∏–∫
        cur_count = bd.cursor()
        cur_count.execute('SELECT COUNT(*) FROM recipebook_fsm')
        fsm_count = cur_count.fetchall()

        # –î–æ–¥–∞—é True —É flag
        cur_flag = bd.cursor()
        cur_flag.execute(
            f"INSERT INTO recipebook_fsm VALUES ('{int(fsm_count[0][0]) + 1}',True)")
        bd.commit()

    bot.send_message(
        message.chat.id, '–°—É–ø–µ—Ä! –ú–∏ —Ä–æ–∑–ø–æ—á–∞–ª–∏ üòä\n–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º\'—è ‚å®',
        reply_markup=types.ReplyKeyboardRemove())


# –•–µ–Ω–¥–ª–µ—Ä —è–∫–∏–π —Ä–µ–∞–≥—É—î –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.message_handler(content_types=['text'])
def start_message(message):
    global name, gender, first_name, last_name, user_id, username, flag, user_dict, recipe_dict

    # –ß–∞—Å—Ç–∏–Ω–∞ FSM —è–∫–∞ –∫–ª–∞–¥–µ –¥–∞–Ω–Ω—ñ –∑ –ë–î —É –∑–º—ñ–Ω–Ω—É flag
    with sq.connect('../dj_bot/bot_site/db.sqlite3') as bd:
        # –ó–≤–µ—Ä—Ç–∞—é—Å—å –¥–æ –ë–î
        cur_fsm = bd.cursor()
        cur_fsm.execute('SELECT * FROM recipebook_fsm')
        fsm = cur_fsm.fetchall()

        # –†–∞—Ö—É—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–∞–Ω–Ω–∏—Ö —É –ë–î —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ –ª—ñ—á—ñ–ª—å–Ω–∏–∫
        cur_count = bd.cursor()
        cur_count.execute('SELECT COUNT(*) FROM recipebook_fsm')
        fsm_count = cur_count.fetchall()

        flag = bool(fsm[int(fsm_count[0][0]) - 1][1])

    # –ß–µ—Ä–µ–∑ if –ø–µ—Ä–µ–≤—ñ—Ä—è—é —Å—Ç–∞–Ω FSM —Ç–∞ –∑—á–∏—Ç—É—é —ñ–º'—è
    if flag:
        name = message.text
        bot.send_message(message.chat.id,
                         f'–î–æ–±—Ä–µ, {name}!\n–í–∫–∞–∂—ñ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç—å ‚öñ',
                         reply_markup=markup_gender)
        first_name = message.from_user.first_name
        last_name = message.from_user.last_name
        user_id = message.from_user.id
        username = message.from_user.username

        # –ß–∞—Å—Ç–∏–Ω–∞ FSM —è–∫–∞ –¥–æ–¥–∞—î False —É flag
        with sq.connect('../dj_bot/bot_site/db.sqlite3') as bd:

            # –†–æ–±–ª—é –ª—ñ—á–∏–ª—å–Ω–∏–∫
            cur_count = bd.cursor()
            cur_count.execute('SELECT COUNT(*) FROM recipebook_fsm')
            fsm_count = cur_count.fetchall()

            # –î–æ–¥–∞—é True —É flag
            cur_flag = bd.cursor()
            cur_flag.execute(
                f"INSERT INTO recipebook_fsm VALUES ('{int(fsm_count[0][0]) + 1}',False)")
            bd.commit()

    # –ó—á–∏—Ç—É—é —Å—Ç–∞—Ç—å
    elif message.text in list_gender or message.text == '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚Ü©':
        if message.text != '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚Ü©':
            gender = message.text
            # sqlite
            with sq.connect('../dj_bot/bot_site/db.sqlite3') as bd:
                cur_user = bd.cursor()
                cur_user.execute('SELECT * FROM recipebook_recipebook')
                user = cur_user.fetchall()

                user_dict = {i[4]: [i[5], i[6]] for i in user}
            try:
                # sqlite
                with sq.connect('../dj_bot/bot_site/db.sqlite3') as bd:
                    cur = bd.cursor()
                    cur.execute('SELECT COUNT(*) FROM recipebook_recipebook')
                    cur.execute(
                        f"INSERT INTO recipebook_recipebook  VALUES ('{user_id}','{first_name}','{last_name}','{username}','{user_id}','{name}','{gender}')")
                    bd.commit()

                with sq.connect('../dj_bot/bot_site/db.sqlite3') as bd:
                    cur_user = bd.cursor()
                    cur_user.execute('SELECT * FROM recipebook_recipebook')
                    user = cur_user.fetchall()

                    user_dict = {i[4]: [i[5], i[6]] for i in user}

            except sq.IntegrityError:
                bot.send_message(
                    message.chat.id,
                    f'–í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ üòä\n\n–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:\n–Ü–º\'—è: {user_dict[user_id][0]}\n'
                    f'–°—Ç–∞—Ç—å: {user_dict[user_id][1]}\n–¢–∞–∫ —â–æ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ –¥–∞–ª—ñ',
                    reply_markup=markup_main_menu)

            else:
                bot.send_message(
                    message.chat.id,
                    f'–°—É–ø–µ—Ä)\n–°—Ç–∞—Ç—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ\n\n–ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é üîÑ',
                    reply_markup=markup_main_menu)
        else:
            bot.send_message(
                message.chat.id,
                f'–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é üîÑ',
                reply_markup=markup_main_menu)

    # "–ü—Ä–æ –º–µ–Ω–µ" - –≤–∏–≤–æ–¥–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –∑ –∞–Ω–∫–µ—Ç–∏, –∑–∞–ª–∏—à–∞—î –≤ —Ç–æ–º—É –∂ –º–µ–Ω—é.
    elif message.text == '–ü—Ä–æ –º–µ–Ω–µ ‚Ñπ':
        bot.send_message(
            message.chat.id,
            f'–í—Å—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞ –ø—Ä–æ –≤–∞—Å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è ‚Ñπ\n'
            f'–Ü–º\'—è: {user_dict[user_id][0]}\n–°—Ç–∞—Ç—å: {user_dict[user_id][1]}',
            reply_markup=markup_main_menu)

    # "–†–µ—Ü–µ–ø—Ç–∏" - –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —É –º–µ–Ω—é —Ä–µ—Ü–µ–ø—Ç—ñ–≤.
    elif message.text == '–†–µ—Ü–µ–ø—Ç–∏ üç¥':
        # sqlite
        with sq.connect('../dj_bot/bot_site/db.sqlite3') as bd:
            cur = bd.cursor()
            cur.execute('SELECT * FROM recipebook_recipebook_recipe')
            recipe = cur.fetchall()

            recipe_dict = {i[1]: [i[2], i[3]] for i in recipe}

        bot.send_message(
            message.chat.id,
            '–û–±–µ—Ä—ñ—Ç—å –∫–Ω–æ–ø–∫—É –∑ —Ä–µ—Ü–µ–ø—Ç–æ–º, —è–∫–∏–π –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å üç¥',
            reply_markup=ReplyKeyboardMarkup(
                row_width=2,
                resize_keyboard=True).add(
                *
                [
                    KeyboardButton(i) for i in recipe_dict.keys()]).add(
                    *
                    [
                        KeyboardButton(i) for i in exit_list]))

    # –í–∏–≤—ñ–¥ —Ä–µ—Ü–µ–ø—Ç—ñ–≤ –∑ –ë–î
    elif message.text in recipe_dict.keys():
        media_group = []
        media_group.append(InputMediaPhoto(open(f'../dj_bot/bot_site/media/'
                                                f'{recipe_dict[message.text][1]}', 'rb'),
                                           caption=recipe_dict[message.text][0]))
        bot.send_media_group(message.chat.id, media=media_group)
    elif message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É üöÄ':
        bot.send_message(message.chat.id, goodbye,
                         reply_markup=types.ReplyKeyboardRemove())
    # –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–≤—ñ–¥
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–≤—ñ–¥ üö´')


# –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Å—Ç—ñ–∫–µ—Ä
@bot.message_handler(content_types=["sticker"])
def start_message(message):
    bot.send_message(
        message.chat.id,
        '–ü—Ä–∏–∫–æ–ª—å–Ω–∏–π —Å—Ç—ñ–∫–µ—Ä, –∞–ª–µ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –±—É–¥—å –ª–∞—Å–∫–∞ üòä')


# –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —ñ–Ω—à—ñ –∫–æ–Ω—Ç–µ–Ω—Ç–∏
@bot.message_handler(content_types=["audio",
                                    "document",
                                    "photo",
                                    "video",
                                    "video_note",
                                    "voice",
                                    ])
def start_message(message):
    bot.send_message(message.chat.id, '–î–∞–≤–∞–π –≤—Å–µ —Ç–∞–∫–∏ —Ç–µ–∫—Å—Ç–æ–º üòè')


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    bot.infinity_polling()
